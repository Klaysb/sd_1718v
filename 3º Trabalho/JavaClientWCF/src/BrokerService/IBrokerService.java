
package BrokerService;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IBrokerService", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IBrokerService {


    /**
     * 
     * @param value
     * @return
     *     returns BrokerService.Key
     * @throws IBrokerServiceStoreDataInvalidOperationExceptionFaultFaultMessage
     */
    @WebMethod(operationName = "StoreData", action = "http://tempuri.org/IBrokerService/StoreData")
    @WebResult(name = "StoreDataResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "StoreData", targetNamespace = "http://tempuri.org/", className = "BrokerService.StoreData")
    @ResponseWrapper(localName = "StoreDataResponse", targetNamespace = "http://tempuri.org/", className = "BrokerService.StoreDataResponse")
    public Key storeData(
        @WebParam(name = "value", targetNamespace = "http://tempuri.org/")
        String value)
        throws IBrokerServiceStoreDataInvalidOperationExceptionFaultFaultMessage
    ;

    /**
     * 
     * @param key
     * @return
     *     returns java.lang.String
     * @throws IBrokerServiceRetrieveDataArgumentExceptionFaultFaultMessage
     */
    @WebMethod(operationName = "RetrieveData", action = "http://tempuri.org/IBrokerService/RetrieveData")
    @WebResult(name = "RetrieveDataResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "RetrieveData", targetNamespace = "http://tempuri.org/", className = "BrokerService.RetrieveData")
    @ResponseWrapper(localName = "RetrieveDataResponse", targetNamespace = "http://tempuri.org/", className = "BrokerService.RetrieveDataResponse")
    public String retrieveData(
        @WebParam(name = "key", targetNamespace = "http://tempuri.org/")
        Key key)
        throws IBrokerServiceRetrieveDataArgumentExceptionFaultFaultMessage
    ;

    /**
     * 
     * @param key
     * @throws IBrokerServiceDeleteDataArgumentExceptionFaultFaultMessage
     */
    @WebMethod(operationName = "DeleteData", action = "http://tempuri.org/IBrokerService/DeleteData")
    @RequestWrapper(localName = "DeleteData", targetNamespace = "http://tempuri.org/", className = "BrokerService.DeleteData")
    @ResponseWrapper(localName = "DeleteDataResponse", targetNamespace = "http://tempuri.org/", className = "BrokerService.DeleteDataResponse")
    public void deleteData(
        @WebParam(name = "key", targetNamespace = "http://tempuri.org/")
        Key key)
        throws IBrokerServiceDeleteDataArgumentExceptionFaultFaultMessage
    ;

}
